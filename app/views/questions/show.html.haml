.question
  %div{:class => 'data grid_11'}
    %div{:class => 'grid_10'}
      %h2.title= h @question.title
      .body= @question.body
    %div{:class => 'tags grid_10'}= tag_links(@question.tag_list)    
    %div{:class => 'grid_4'}
      %div{:class => 'vote_box grid_1 alpha'}
        = render :partial => 'common/vote_box' , :locals => {:model => @question}
      %div.grid_3  
      - if logged_in?  
        = link_to(t('action.answer'), '#' , :class => 'answer_new_form_link')
        = favorite_link(@question)  
        %span{:id => "flag_for_question_#{@question.id}"}
          = link_to(t('action.flag') , new_question_flag_path(@question) , :rel => 'facebox')
      - if @question.user == current_user
        = link_to(t('app.edit') , edit_question_path(@question))
    = render :partial => 'common/user_box' , :locals => {:user => @question.user}    
.clear      
%div{:class => 'grid_11' , :id => 'answers'}
  - if logged_in?
    %div{:id => 'answer_new_form_box'}
      = render :partial => 'answers/new' , :locals => {:question => @question}
= render :partial => 'answers/answer' , :collection => @answers
  
- content_for :javascripts do
  = javascript_include_tag('wmd/wmd')
  = javascript_include_tag('vote/question')
  = javascript_include_tag('answer/new')
  = javascript_include_tag('answer/create')
  = javascript_include_tag('answer/select')
  = javascript_include_tag('favorite/call')
  = javascript_include_tag('syntax_highlighter/shCore')
  - %w(shBrushBash.js	shBrushCSharp.js 	shBrushCpp.js shBrushCss.js	shBrushDelphi.js 	shBrushDiff.js shBrushGroovy.js	shBrushJScript.js shBrushJava.js	shBrushPerl.js shBrushPhp.js shBrushPlain.js shBrushPython.js shBrushRuby.js shBrushScala.js shBrushSql.js shBrushVb.js	shBrushXml.js).each do |sh|
    = javascript_include_tag("syntax_highlighter/#{sh}")
  = javascript_tag("SyntaxHighlighter.config.clipboardSwf = 'javascripts/syntax_highlighter/clipboard.swf';SyntaxHighlighter.all();")
  
  
  
- content_for :stylesheets do
  = stylesheet_link_tag('shThemeDefault' , 'shCore')

